<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All-in-One Calculator</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&family=Montserrat:wght@800;900&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6a11cb;
            --secondary: #2575fc;
            --accent: #f093fb;
            --light: #ffffff;
            --dark: #1a1a2e;
            --gray: #f4f4f4;
            --text: #333;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            line-height: 1.6;
            color: var(--text);
            overflow-x: hidden;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        }

        /* Header Styles */
        header {
            position: fixed;
            top: 0;
            width: 100%;
            padding: 1rem 0;
            z-index: 1000;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        header.scrolled {
            padding: 0.5rem 0;
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: auto;
            padding: 0 20px;
        }

        .logo {
            font-family: 'Montserrat', sans-serif;
            font-size: 1.8rem;
            font-weight: 900;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-decoration: none;
            transition: transform 0.3s ease;
        }

        .logo:hover {
            transform: scale(1.05);
        }

        nav ul {
            list-style: none;
            display: flex;
        }

        nav ul li {
            margin-left: 30px;
        }

        nav ul li a {
            color: var(--dark);
            text-decoration: none;
            font-weight: 600;
            position: relative;
            padding: 5px 0;
            transition: color 0.3s ease;
        }

        nav ul li a::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            transition: width 0.3s ease;
        }

        nav ul li a:hover {
            color: var(--primary);
        }

        nav ul li a:hover::after {
            width: 100%;
        }

        /* Hero Section */
        #hero {
            min-height: 60vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            position: relative;
            overflow: hidden;
            padding: 0 20px;
        }

        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }

        .particle {
            position: absolute;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            animation: float 15s infinite linear;
        }

        @keyframes float {
            0% {
                transform: translateY(0) translateX(0) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-100vh) translateX(100px) rotate(360deg);
                opacity: 0;
            }
        }

        .hero-content {
            text-align: center;
            color: var(--light);
            z-index: 2;
            position: relative;
            max-width: 800px;
        }

        .hero-content h1 {
            font-family: 'Montserrat', sans-serif;
            font-size: 3.5rem;
            font-weight: 900;
            margin-bottom: 1rem;
            letter-spacing: 2px;
            animation: fadeInDown 1s ease;
        }

        .hero-content p {
            font-size: 1.2rem;
            font-weight: 300;
            margin-bottom: 2rem;
            animation: fadeInUp 1s ease 0.3s both;
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Section Styles */
        section {
            padding: 80px 0;
            position: relative;
        }

        .section-title {
            font-family: 'Montserrat', sans-serif;
            font-size: 2.5rem;
            font-weight: 800;
            text-align: center;
            margin-bottom: 3rem;
            position: relative;
            color: var(--dark);
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 4px;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            border-radius: 2px;
        }

        .container {
            max-width: 1200px;
            margin: auto;
            padding: 0 20px;
        }

        /* Calculator Section */
        #calculators {
            background: linear-gradient(to bottom, #f5f7fa 0%, #e4e8f0 100%);
        }

        .calculators-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 30px;
        }

        .calculator-card {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.4s ease;
            transform-style: preserve-3d;
            perspective: 1000px;
        }

        .calculator-card:hover {
            transform: translateY(-15px) rotateX(5deg);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        }

        .calculator-header {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            color: white;
            padding: 20px;
            text-align: center;
        }

        .calculator-header h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
        }

        .calculator-body {
            padding: 25px;
        }

        .calculator-display {
            background: #f0f0f0;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
            text-align: right;
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark);
            min-height: 60px;
            display: flex;
            align-items: center;
            justify-content: flex-end;
        }

        .calculator-buttons {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
        }

        .calc-btn {
            background: #f0f0f0;
            border: none;
            border-radius: 10px;
            padding: 15px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .calc-btn:hover {
            background: #e0e0e0;
            transform: scale(1.05);
        }

        .calc-btn.operator {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            color: white;
        }

        .calc-btn.operator:hover {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--primary) 100%);
        }

        .calc-btn.equals {
            grid-column: span 2;
            background: linear-gradient(135deg, var(--accent) 0%, var(--secondary) 100%);
            color: white;
        }

        .calc-btn.equals:hover {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--accent) 100%);
        }

        /* Scientific Calculator Specific Styles */
        .scientific-buttons {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 8px;
        }

        .scientific-buttons .calc-btn {
            padding: 12px 8px;
            font-size: 0.9rem;
        }

        /* BMI Calculator Specific Styles */
        .bmi-inputs {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-bottom: 20px;
        }

        .input-group {
            display: flex;
            flex-direction: column;
        }

        .input-group label {
            margin-bottom: 5px;
            font-weight: 600;
            color: var(--dark);
        }

        .input-group input {
            padding: 12px;
            border-radius: 10px;
            border: 1px solid #ddd;
            font-size: 1rem;
        }

        .bmi-result {
            background: #f0f0f0;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--dark);
            margin-top: 15px;
        }

        /* Currency Converter Specific Styles */
        .currency-inputs {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-bottom: 20px;
        }

        .currency-row {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .currency-row select, .currency-row input {
            padding: 12px;
            border-radius: 10px;
            border: 1px solid #ddd;
            font-size: 1rem;
        }

        .currency-row select {
            flex: 1;
        }

        .currency-row input {
            flex: 2;
        }

        /* Footer */
        footer {
            background: var(--dark);
            color: var(--light);
            text-align: center;
            padding: 30px 0;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .hero-content h1 {
                font-size: 2.5rem;
            }

            nav {
                flex-direction: column;
            }

            nav ul {
                margin-top: 15px;
            }

            nav ul li {
                margin: 0 10px;
            }

            .calculators-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 576px) {
            .hero-content h1 {
                font-size: 2rem;
            }

            .section-title {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header id="myHeader">
        <nav>
            <a href="#" class="logo">CALCULATORS</a>
            <ul>
                <li><a href="#calculators">Calculators</a></li>
                <li><a href="index.html">Home</a></li>
                <li><a href="data-analytics.html">Data Analytics</a></li>
                <li><a href="home-automation.html">Home Automation</a></li>
            </ul>
        </nav>
    </header>

    <!-- Hero Section -->
    <section id="hero">
        <div class="particles" id="particles"></div>
        <div class="hero-content">
            <h1>All-in-One Calculator</h1>
            <p>Multiple calculators in one place for all your needs</p>
        </div>
    </section>

    <!-- Calculators Section -->
    <section id="calculators">
        <div class="container">
            <h2 class="section-title">Calculator Collection</h2>
            <div class="calculators-grid">
                <!-- Basic Calculator -->
                <div class="calculator-card">
                    <div class="calculator-header">
                        <h3><i class="fas fa-calculator"></i> Basic Calculator</h3>
                        <p>Simple arithmetic operations</p>
                    </div>
                    <div class="calculator-body">
                        <div class="calculator-display" id="basic-display">0</div>
                        <div class="calculator-buttons">
                            <button class="calc-btn" onclick="clearBasicDisplay()">C</button>
                            <button class="calc-btn" onclick="deleteLastBasic()">⌫</button>
                            <button class="calc-btn operator" onclick="appendToBasicDisplay('/')">/</button>
                            <button class="calc-btn operator" onclick="appendToBasicDisplay('*')">×</button>
                            
                            <button class="calc-btn" onclick="appendToBasicDisplay('7')">7</button>
                            <button class="calc-btn" onclick="appendToBasicDisplay('8')">8</button>
                            <button class="calc-btn" onclick="appendToBasicDisplay('9')">9</button>
                            <button class="calc-btn operator" onclick="appendToBasicDisplay('-')">-</button>
                            
                            <button class="calc-btn" onclick="appendToBasicDisplay('4')">4</button>
                            <button class="calc-btn" onclick="appendToBasicDisplay('5')">5</button>
                            <button class="calc-btn" onclick="appendToBasicDisplay('6')">6</button>
                            <button class="calc-btn operator" onclick="appendToBasicDisplay('+')">+</button>
                            
                            <button class="calc-btn" onclick="appendToBasicDisplay('1')">1</button>
                            <button class="calc-btn" onclick="appendToBasicDisplay('2')">2</button>
                            <button class="calc-btn" onclick="appendToBasicDisplay('3')">3</button>
                            <button class="calc-btn" onclick="appendToBasicDisplay('.')">.</button>
                            
                            <button class="calc-btn" onclick="appendToBasicDisplay('0')">0</button>
                            <button class="calc-btn equals" onclick="calculateBasic()">=</button>
                        </div>
                    </div>
                </div>

                <!-- Scientific Calculator -->
                <div class="calculator-card">
                    <div class="calculator-header">
                        <h3><i class="fas fa-square-root-alt"></i> Scientific Calculator</h3>
                        <p>Advanced mathematical functions</p>
                    </div>
                    <div class="calculator-body">
                        <div class="calculator-display" id="scientific-display">0</div>
                        <div class="scientific-buttons">
                            <button class="calc-btn" onclick="clearScientificDisplay()">C</button>
                            <button class="calc-btn" onclick="deleteLastScientific()">⌫</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('(')">(</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay(')')">)</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('^')">x^y</button>
                            
                            <button class="calc-btn" onclick="appendToScientificDisplay('sin(')">sin</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('cos(')">cos</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('tan(')">tan</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('/')">/</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('*')">×</button>
                            
                            <button class="calc-btn" onclick="appendToScientificDisplay('log(')">log</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('ln(')">ln</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('sqrt(')">√</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('-')">-</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('+')">+</button>
                            
                            <button class="calc-btn" onclick="appendToScientificDisplay('7')">7</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('8')">8</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('9')">9</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('.')">.</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('π')">π</button>
                            
                            <button class="calc-btn" onclick="appendToScientificDisplay('4')">4</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('5')">5</button>
                            <button class="calc-btn" onclick="appendToScientificDisplay('6')">6</button>
                            <button class="calc-btn operator" onclick="appendToScientificDisplay('e')">e</button>
                            <button class="calc-btn equals" onclick="calculateScientific()">=</button>
                        </div>
                    </div>
                </div>

                <!-- BMI Calculator -->
                <div class="calculator-card">
                    <div class="calculator-header">
                        <h3><i class="fas fa-weight"></i> BMI Calculator</h3>
                        <p>Calculate your Body Mass Index</p>
                    </div>
                    <div class="calculator-body">
                        <div class="bmi-inputs">
                            <div class="input-group">
                                <label for="height">Height (cm):</label>
                                <input type="number" id="height" placeholder="Enter your height">
                            </div>
                            <div class="input-group">
                                <label for="weight">Weight (kg):</label>
                                <input type="number" id="weight" placeholder="Enter your weight">
                            </div>
                            <button class="calc-btn equals" onclick="calculateBMI()">Calculate BMI</button>
                        </div>
                        <div class="bmi-result" id="bmi-result">Your BMI will appear here</div>
                    </div>
                </div>

                <!-- Currency Converter -->
                <div class="calculator-card">
                    <div class="calculator-header">
                        <h3><i class="fas fa-exchange-alt"></i> Currency Converter</h3>
                        <p>Convert between different currencies</p>
                    </div>
                    <div class="calculator-body">
                        <div class="currency-inputs">
                            <div class="currency-row">
                                <select id="from-currency">
                                    <option value="USD">USD</option>
                                    <option value="EUR">EUR</option>
                                    <option value="GBP">GBP</option>
                                    <option value="JPY">JPY</option>
                                    <option value="CAD">CAD</option>
                                    <option value="AUD">AUD</option>
                                </select>
                                <input type="number" id="from-amount" placeholder="Amount">
                            </div>
                            <div class="currency-row">
                                <select id="to-currency">
                                    <option value="USD">USD</option>
                                    <option value="EUR" selected>EUR</option>
                                    <option value="GBP">GBP</option>
                                    <option value="JPY">JPY</option>
                                    <option value="CAD">CAD</option>
                                    <option value="AUD">AUD</option>
                                </select>
                                <input type="number" id="to-amount" placeholder="Converted amount" readonly>
                            </div>
                            <button class="calc-btn equals" onclick="convertCurrency()">Convert</button>
                        </div>
                    </div>
                </div>

                <!-- Percentage Calculator -->
                <div class="calculator-card">
                    <div class="calculator-header">
                        <h3><i class="fas fa-percent"></i> Percentage Calculator</h3>
                        <p>Calculate percentages and discounts</p>
                    </div>
                    <div class="calculator-body">
                        <div class="bmi-inputs">
                            <div class="input-group">
                                <label for="percent-value">Value:</label>
                                <input type="number" id="percent-value" placeholder="Enter value">
                            </div>
                            <div class="input-group">
                                <label for="percent-percent">Percentage:</label>
                                <input type="number" id="percent-percent" placeholder="Enter percentage">
                            </div>
                            <button class="calc-btn equals" onclick="calculatePercentage()">Calculate</button>
                        </div>
                        <div class="bmi-result" id="percent-result">Result will appear here</div>
                    </div>
                </div>

                <!-- Loan Calculator -->
                <div class="calculator-card">
                    <div class="calculator-header">
                        <h3><i class="fas fa-home"></i> Loan Calculator</h3>
                        <p>Calculate loan payments and interest</p>
                    </div>
                    <div class="calculator-body">
                        <div class="bmi-inputs">
                            <div class="input-group">
                                <label for="loan-amount">Loan Amount:</label>
                                <input type="number" id="loan-amount" placeholder="Enter loan amount">
                            </div>
                            <div class="input-group">
                                <label for="loan-rate">Interest Rate (%):</label>
                                <input type="number" id="loan-rate" placeholder="Enter interest rate">
                            </div>
                            <div class="input-group">
                                <label for="loan-term">Loan Term (years):</label>
                                <input type="number" id="loan-term" placeholder="Enter loan term">
                            </div>
                            <button class="calc-btn equals" onclick="calculateLoan()">Calculate</button>
                        </div>
                        <div class="bmi-result" id="loan-result">Monthly payment will appear here</div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <p>&copy; 2024 All-in-One Calculator. All rights reserved.</p>
    </footer>

    <script>
        // Sticky header
        window.addEventListener('scroll', function() {
            const header = document.getElementById('myHeader');
            if (window.scrollY > 50) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        });

        // Particle animation for hero section
        document.addEventListener('DOMContentLoaded', function() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 30;
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                
                // Random size between 5px and 15px
                const size = Math.random() * 10 + 5;
                particle.style.width = `${size}px`;
                particle.style.height = `${size}px`;
                
                // Random position
                particle.style.left = `${Math.random() * 100}%`;
                particle.style.top = `${Math.random() * 100}%`;
                
                // Random animation duration between 10s and 20s
                const duration = Math.random() * 10 + 10;
                particle.style.animationDuration = `${duration}s`;
                
                // Random delay
                particle.style.animationDelay = `${Math.random() * 5}s`;
                
                particlesContainer.appendChild(particle);
            }
        });

        // Basic Calculator Functions
        let basicDisplay = document.getElementById('basic-display');
        let basicInput = '0';

        function updateBasicDisplay() {
            basicDisplay.textContent = basicInput;
        }

        function appendToBasicDisplay(value) {
            if (basicInput === '0' && value !== '.') {
                basicInput = value;
            } else {
                basicInput += value;
            }
            updateBasicDisplay();
        }

        function clearBasicDisplay() {
            basicInput = '0';
            updateBasicDisplay();
        }

        function deleteLastBasic() {
            if (basicInput.length > 1) {
                basicInput = basicInput.slice(0, -1);
            } else {
                basicInput = '0';
            }
            updateBasicDisplay();
        }

        function calculateBasic() {
            try {
                // Replace × with * for evaluation
                let expression = basicInput.replace(/×/g, '*');
                basicInput = String(eval(expression));
                updateBasicDisplay();
            } catch (error) {
                basicInput = 'Error';
                updateBasicDisplay();
                setTimeout(() => {
                    basicInput = '0';
                    updateBasicDisplay();
                }, 1500);
            }
        }

        // Scientific Calculator Functions
        let scientificDisplay = document.getElementById('scientific-display');
        let scientificInput = '0';

        function updateScientificDisplay() {
            scientificDisplay.textContent = scientificInput;
        }

        function appendToScientificDisplay(value) {
            if (scientificInput === '0' && value !== '.') {
                scientificInput = value;
            } else {
                scientificInput += value;
            }
            updateScientificDisplay();
        }

        function clearScientificDisplay() {
            scientificInput = '0';
            updateScientificDisplay();
        }

        function deleteLastScientific() {
            if (scientificInput.length > 1) {
                scientificInput = scientificInput.slice(0, -1);
            } else {
                scientificInput = '0';
            }
            updateScientificDisplay();
        }

        function calculateScientific() {
            try {
                // Replace special symbols for evaluation
                let expression = scientificInput
                    .replace(/×/g, '*')
                    .replace(/π/g, 'Math.PI')
                    .replace(/e/g, 'Math.E')
                    .replace(/sin/g, 'Math.sin')
                    .replace(/cos/g, 'Math.cos')
                    .replace(/tan/g, 'Math.tan')
                    .replace(/log/g, 'Math.log10')
                    .replace(/ln/g, 'Math.log')
                    .replace(/sqrt/g, 'Math.sqrt')
                    .replace(/\^/g, '**');
                
                scientificInput = String(eval(expression));
                updateScientificDisplay();
            } catch (error) {
                scientificInput = 'Error';
                updateScientificDisplay();
                setTimeout(() => {
                    scientificInput = '0';
                    updateScientificDisplay();
                }, 1500);
            }
        }

        // BMI Calculator Functions
        function calculateBMI() {
            const height = parseFloat(document.getElementById('height').value);
            const weight = parseFloat(document.getElementById('weight').value);
            const resultElement = document.getElementById('bmi-result');
            
            if (isNaN(height) || isNaN(weight) || height <= 0 || weight <= 0) {
                resultElement.textContent = 'Please enter valid values';
                return;
            }
            
            const heightInMeters = height / 100;
            const bmi = weight / (heightInMeters * heightInMeters);
            
            let category = '';
            if (bmi < 18.5) {
                category = 'Underweight';
            } else if (bmi < 25) {
                category = 'Normal weight';
            } else if (bmi < 30) {
                category = 'Overweight';
            } else {
                category = 'Obese';
            }
            
            resultElement.textContent = `Your BMI: ${bmi.toFixed(2)} (${category})`;
        }

        // Currency Converter Functions
        function convertCurrency() {
            const fromCurrency = document.getElementById('from-currency').value;
            const toCurrency = document.getElementById('to-currency').value;
            const amount = parseFloat(document.getElementById('from-amount').value);
            const resultElement = document.getElementById('to-amount');
            
            if (isNaN(amount) || amount <= 0) {
                resultElement.value = 'Please enter valid amount';
                return;
            }
            
            // Exchange rates (in a real app, you would fetch these from an API)
            const exchangeRates = {
                USD: { EUR: 0.93, GBP: 0.79, JPY: 151.61, CAD: 1.36, AUD: 1.53 },
                EUR: { USD: 1.07, GBP: 0.85, JPY: 162.84, CAD: 1.46, AUD: 1.64 },
                GBP: { USD: 1.26, EUR: 1.17, JPY: 191.32, CAD: 1.72, AUD: 1.93 },
                JPY: { USD: 0.0066, EUR: 0.0061, GBP: 0.0052, CAD: 0.0090, AUD: 0.0101 },
                CAD: { USD: 0.74, EUR: 0.68, GBP: 0.58, JPY: 111.48, AUD: 1.13 },
                AUD: { USD: 0.65, EUR: 0.61, GBP: 0.52, JPY: 99.09, CAD: 0.89 }
            };
            
            let convertedAmount;
            if (fromCurrency === toCurrency) {
                convertedAmount = amount;
            } else {
                convertedAmount = amount * exchangeRates[fromCurrency][toCurrency];
            }
            
            resultElement.value = convertedAmount.toFixed(2);
        }

        // Percentage Calculator Functions
        function calculatePercentage() {
            const value = parseFloat(document.getElementById('percent-value').value);
            const percent = parseFloat(document.getElementById('percent-percent').value);
            const resultElement = document.getElementById('percent-result');
            
            if (isNaN(value) || isNaN(percent)) {
                resultElement.textContent = 'Please enter valid values';
                return;
            }
            
            const result = (value * percent) / 100;
            resultElement.textContent = `${percent}% of ${value} is ${result.toFixed(2)}`;
        }

        // Loan Calculator Functions
        function calculateLoan() {
            const principal = parseFloat(document.getElementById('loan-amount').value);
            const annualRate = parseFloat(document.getElementById('loan-rate').value) / 100;
            const years = parseFloat(document.getElementById('loan-term').value);
            const resultElement = document.getElementById('loan-result');
            
            if (isNaN(principal) || isNaN(annualRate) || isNaN(years) || principal <= 0 || annualRate <= 0 || years <= 0) {
                resultElement.textContent = 'Please enter valid values';
                return;
            }
            
            const monthlyRate = annualRate / 12;
            const numberOfPayments = years * 12;
            
            // Monthly payment formula: P * r * (1+r)^n / ((1+r)^n - 1)
            const monthlyPayment = principal * monthlyRate * Math.pow(1 + monthlyRate, numberOfPayments) / 
                                  (Math.pow(1 + monthlyRate, numberOfPayments) - 1);
            
            resultElement.textContent = `Monthly Payment: $${monthlyPayment.toFixed(2)}`;
        }
    </script>
</body>
</html>